/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Pedidos;

import DB.ConnectMYSQL;
import Funcionarios.modeloTabela;
import Produtos.beansProdutos;
import Produtos.daoProdutos;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author tduarte
 */
public class telaTirarPedido extends javax.swing.JInternalFrame {
    beansProdutos modProdutos = new beansProdutos();
    daoProdutos controlProdutos = new daoProdutos();
    ConnectMYSQL conex = new ConnectMYSQL();
    beansPedido mod = new beansPedido();
    daoPedidos dao = new daoPedidos();
    DefaultListModel MODELO;
    int Enter = 0;
    
    
    //transformei as variaveis em arrays p criar 1 tabela e não só 1 coluna da tabela
    int idProduto;
    String nomeProduto = null;
    String tipoProduto;
    double valorProduto;
    int    estoqueProduto;
    int    quantidadeProduto = 1;
    carrinhoTableModel tableModel = new carrinhoTableModel();
    
    
    public telaTirarPedido() {
        initComponents();
        preencherTabelaProdutos("select *from produtos ORDER BY nome");
        jTable_Carrinho.setModel(tableModel);
        jScrollPane1.setVisible(false);
        MODELO = new DefaultListModel();
        jList.setModel(MODELO);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableProdutos = new javax.swing.JTable();
        jTextFieldPesquisarProduto = new javax.swing.JTextField();
        jComboBoxTipodoProduto = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jFormattedTextFieldQuantidade = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList = new javax.swing.JList<>();
        jButtonRemover = new javax.swing.JButton();
        jButtonLimpar = new javax.swing.JButton();
        jTextFieldNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldValorAtual = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldSaldo = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_Carrinho = new javax.swing.JTable();
        jLabelNomeCliente = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldQuantidade = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Tirar Pedido");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel2.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel2.setLayout(null);

        jLabel6.setText("Nome do Produto");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(274, 14, 119, 15);

        jTableProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableProdutosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableProdutos);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(10, 60, 632, 190);

        jTextFieldPesquisarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPesquisarProdutoActionPerformed(evt);
            }
        });
        jPanel2.add(jTextFieldPesquisarProduto);
        jTextFieldPesquisarProduto.setBounds(14, 38, 521, 19);

        jComboBoxTipodoProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Hidráulicos", "Ferragens e Ferramentas", "Tubos", "Fabricantes", "Tintas e Abrasivos", "Ferramentas Manuais", "Material Elétrico" }));
        jPanel2.add(jComboBoxTipodoProduto);
        jComboBoxTipodoProduto.setBounds(541, 35, 105, 24);

        jLabel7.setText("Tipo");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(584, 14, 29, 15);

        jFormattedTextFieldQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        jFormattedTextFieldQuantidade.setText("Única");
        jFormattedTextFieldQuantidade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFormattedTextFieldQuantidadeMouseClicked(evt);
            }
        });
        jFormattedTextFieldQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextFieldQuantidadeActionPerformed(evt);
            }
        });
        jFormattedTextFieldQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFormattedTextFieldQuantidadeKeyPressed(evt);
            }
        });
        jPanel2.add(jFormattedTextFieldQuantidade);
        jFormattedTextFieldQuantidade.setBounds(268, 591, 84, 19);

        jLabel1.setText("Quantidade:");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(14, 588, 85, 15);

        jLayeredPane1.add(jPanel2);
        jPanel2.setBounds(0, 198, 660, 260);

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jScrollPane1MousePressed(evt);
            }
        });

        jList.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList);

        jLayeredPane1.add(jScrollPane1);
        jScrollPane1.setBounds(0, 50, 250, 140);

        jButtonRemover.setText("Remover");
        jButtonRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonRemover);
        jButtonRemover.setBounds(360, 140, 100, 25);

        jButtonLimpar.setText("Limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonLimpar);
        jButtonLimpar.setBounds(470, 140, 95, 25);

        jTextFieldNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomeActionPerformed(evt);
            }
        });
        jTextFieldNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNomeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNomeKeyReleased(evt);
            }
        });
        jLayeredPane1.add(jTextFieldNome);
        jTextFieldNome.setBounds(10, 20, 250, 30);

        jLabel2.setText("Nome do Cliente");
        jLayeredPane1.add(jLabel2);
        jLabel2.setBounds(34, 1, 112, 15);

        jLabel5.setText("Valor Atual");
        jLayeredPane1.add(jLabel5);
        jLabel5.setBounds(530, 0, 75, 15);

        jTextFieldValorAtual.setEditable(false);
        jTextFieldValorAtual.setText("0.0");
        jTextFieldValorAtual.setEnabled(false);
        jLayeredPane1.add(jTextFieldValorAtual);
        jTextFieldValorAtual.setBounds(520, 20, 110, 30);

        jLabel3.setText("Saldo");
        jLayeredPane1.add(jLabel3);
        jLabel3.setBounds(440, 0, 38, 15);

        jTextFieldSaldo.setText("R$00,00");
        jTextFieldSaldo.setEnabled(false);
        jTextFieldSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSaldoActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jTextFieldSaldo);
        jTextFieldSaldo.setBounds(420, 20, 85, 30);

        jButton5.setText("Finalizar Pedido");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButton5);
        jButton5.setBounds(10, 490, 660, 20);

        jButtonEditar.setText("Editar QTD");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonEditar);
        jButtonEditar.setBounds(240, 140, 110, 25);

        jTable_Carrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_Carrinho.setOpaque(false);
        jScrollPane3.setViewportView(jTable_Carrinho);

        jLayeredPane1.add(jScrollPane3);
        jScrollPane3.setBounds(130, 50, 530, 83);

        jLabelNomeCliente.setText("Nome do Cliente");
        jLayeredPane1.add(jLabelNomeCliente);
        jLabelNomeCliente.setBounds(280, 30, 170, 15);

        jButton2.setText("Adicionar ao Carrinho");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButton2);
        jButton2.setBounds(250, 460, 410, 25);

        jLabel4.setText("Quantidade:");
        jLayeredPane1.add(jLabel4);
        jLabel4.setBounds(10, 460, 90, 15);

        jTextFieldQuantidade.setText("Única");
        jTextFieldQuantidade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldQuantidadeMouseClicked(evt);
            }
        });
        jTextFieldQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldQuantidadeKeyPressed(evt);
            }
        });
        jLayeredPane1.add(jTextFieldQuantidade);
        jTextFieldQuantidade.setBounds(100, 460, 140, 20);

        getContentPane().add(jLayeredPane1);

        pack();
    }// </editor-fold>//GEN-END:initComponents
/* 
    public String PegarProdutos(){
        String produtos;
         for(int i = 0; i < jTable_Carrinho.getRowCount(); i++){
          //Salvar no banco de dados o nome e o valor
          // valorTotal  += Double.parseDouble(jTable_Carrinho.getValueAt(i, 2).toString());
      }
         return valorTotal.toString();
    }  
    */
    
    public String getDataAtual() {
		Calendar calendar = new GregorianCalendar();
                Date data = new Date(System.currentTimeMillis());  
                SimpleDateFormat formatarDate = new SimpleDateFormat("dd/MM/yyyy"); 
		return formatarDate.format(data);               
	}

    
    public void ListaDePesquisas(){
        try{
            conex.conectar();
            conex.executaSql("SELECT *FROM clientes where nome like '"+ jTextFieldNome.getText() + "%' ORDER BY nome");
            MODELO.removeAllElements();
            int v = 0;
            while (conex.rs.next() & v <4) {
                MODELO.addElement(conex.rs.getString("nome"));
                v++;
            }
            if(v>=1){
                jScrollPane1.setVisible(true);
                
            }else{
                jScrollPane1.setVisible(false);
            }
            
            ResultadoPesquisa();
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Erro ao listar dados");
        }
        conex.desconecta();
    }
    
    public void MostraPesquisa(){
        conex.conectar();
        int Linha = jList.getSelectedIndex();
           if(Linha >= 0 ){
               conex.executaSql("SELECT * FROM clientes where nome like '" + "" + jTextFieldNome.getText() + "%' ORDER BY nome LIMIT" + Linha + " , 1");
           }
           conex.desconecta();
        
    }
    
    public void ResultadoPesquisa(){
        try {
            conex.conectar();
        conex.rs.first();
        jTextFieldSaldo.setText(conex.rs.getString("credito"));
        jLabelNomeCliente.setText(conex.rs.getString("nome"));
        }catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Nome de cliente inexistente");
        }
        conex.desconecta();
    }    
    
    private String CalculaTotal(){
        Double valorTotal = 0.0;
         for(int i = 0; i < jTable_Carrinho.getRowCount(); i++){
           valorTotal  += Double.parseDouble(jTable_Carrinho.getValueAt(i, 2).toString());
      }
         return valorTotal.toString();
    }
    
    private Integer CalcularQuantidadeTotal(){
        int quantidadeTotal = 0;
            for(int i = 0; i < jTable_Carrinho.getRowCount(); i++){
                quantidadeTotal  += Integer.parseInt(jTable_Carrinho.getValueAt(i, 1).toString());
            }
            return quantidadeTotal;
    }
    
    public void voltarPadrao(){
        jLabelNomeCliente.setText("Nome do Cliente");
        jTextFieldSaldo.setText("R$00,00");
        jTextFieldValorAtual.setText("0.0");
        jTextFieldPesquisarProduto.setText("");
        jTextFieldNome.setText("");
        jComboBoxTipodoProduto.setSelectedItem("Todos");
        jFormattedTextFieldQuantidade.setText("Única");
    }        
    
    public void limparTabela(){
        for(double i = 0; i < jTable_Carrinho.getRowCount(); i =+ 0.5){
            tableModel.removeRow(0);
        }
    }
    
    private void jTableProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProdutosMouseClicked
        String nome =""+jTableProdutos.getValueAt(jTableProdutos.getSelectedRow(), 1);
        conex.conectar();
        conex.executaSql("select *from produtos where nome='"+nome+"'");
        try {

            conex.rs.first();
            //transformei antes as variaveis em arrays
            idProduto      = (conex.rs.getInt("id"));
            nomeProduto    = (conex.rs.getString("nome"));
            tipoProduto    = (conex.rs.getString("tipo"));
            valorProduto   = (double) (conex.rs.getDouble("valor"));
            estoqueProduto = (conex.rs.getInt("estoque"));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao selecionar os dados "+ex);
        }

        conex.desconecta();

    }//GEN-LAST:event_jTableProdutosMouseClicked

    public void preencherTabelaProdutos(String Sql){
          ArrayList dados = new ArrayList();
          String [] colunas = new String []{"ID","Nome","Tipo","Valor","Estoque"};
          conex.conectar();
          conex.executaSql(Sql);        
          try{
              conex.rs.first();
              do{
                  dados.add(new Object[]{conex.rs.getInt("id"),conex.rs.getString("nome"),conex.rs.getString("tipo"),conex.rs.getDouble("valor"),conex.rs.getInt("estoque")});
              }while(conex.rs.next());
          }catch(SQLException ex){
              JOptionPane.showMessageDialog(null, "Erro ao preencher Arraylist"+ex); 
          }
          modeloTabela modelo = new modeloTabela(dados, colunas);
          
          jTableProdutos.setModel(modelo);
          jTableProdutos.getColumnModel().getColumn(0).setPreferredWidth(43);
          jTableProdutos.getColumnModel().getColumn(0).setResizable(false);
          jTableProdutos.getColumnModel().getColumn(1).setPreferredWidth(121);
          jTableProdutos.getColumnModel().getColumn(1).setResizable(false);
          jTableProdutos.getColumnModel().getColumn(2).setPreferredWidth(90);
          jTableProdutos.getColumnModel().getColumn(2).setResizable(false);
          jTableProdutos.getColumnModel().getColumn(3).setPreferredWidth(85);
          jTableProdutos.getColumnModel().getColumn(3).setResizable(false);
          jTableProdutos.getColumnModel().getColumn(4).setPreferredWidth(85);
          jTableProdutos.getColumnModel().getColumn(4).setResizable(false);
          jTableProdutos.getTableHeader().setReorderingAllowed(false);
          jTableProdutos.setAutoResizeMode(jTableProdutos.AUTO_RESIZE_OFF);
          jTableProdutos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
          conex.desconecta();
      }
    
        public void preencherTabelaCarrinho(){
          beansCarrinho p = new beansCarrinho();
          
            p.setId(idProduto);
            p.setDescricao(nomeProduto);
            p.setQtd(quantidadeProduto);
            p.setValor(valorProduto);
        
            tableModel.addRow(p);
       }
    
    private void jTextFieldPesquisarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarProdutoActionPerformed
        modProdutos.setPesquisa(jTextFieldPesquisarProduto.getText());
        modProdutos.setTipoPesquisa((String) jComboBoxTipodoProduto.getSelectedItem());
        controlProdutos.buscar(modProdutos);
        if(jComboBoxTipodoProduto.getSelectedItem() == "Todos"){
            preencherTabelaProdutos("select *from produtos where nome like'%" + modProdutos.getPesquisa()+ "%'");
        }else{
            preencherTabelaProdutos("select *from produtos where nome like'%" + modProdutos.getPesquisa()+ "%'"+"and tipo like'"+modProdutos.getTipoPesquisa()+"'");
        }
    }//GEN-LAST:event_jTextFieldPesquisarProdutoActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int resposta = 0;
        resposta = JOptionPane.showConfirmDialog(rootPane, "Deseja Finalizar o pedido?");
        if(resposta ==JOptionPane.YES_OPTION){
           
         double valorAtual = Double.parseDouble(CalculaTotal());
         
            if(valorAtual != 0.0 ){
                if(!jLabelNomeCliente.getText().equals("Nome do Cliente")){
                    
                    JOptionPane.showMessageDialog(null,getDataAtual());
                   
                    mod.setNomeClienteCompra(jLabelNomeCliente.getText());
                    mod.setValorCompra(valorAtual);                                        
                    mod.setQuantidadeCompra(CalcularQuantidadeTotal());
                    mod.setData(getDataAtual());
                    dao.Salvar(mod);
                    
                    jComboBoxTipodoProduto.setSelectedItem("Todos");
                    preencherTabelaProdutos("select *from produtos order by nome");
                    
                    voltarPadrao();
                    
       
       }else{
                    JOptionPane.showMessageDialog(null, "Favor selecionar cliente antes de finalizar o pedido");
                }
      }else{
                JOptionPane.showMessageDialog(null, "Favor adicionar um ou mais produtos à tabela antes de finalizar o pedido");
            }
     }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jFormattedTextFieldQuantidadeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFormattedTextFieldQuantidadeMouseClicked
        // TODO add your handling code here:
        if(jFormattedTextFieldQuantidade.getText().equals("Única")){
            jFormattedTextFieldQuantidade.setText("");
        }
    }//GEN-LAST:event_jFormattedTextFieldQuantidadeMouseClicked

    private void jFormattedTextFieldQuantidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextFieldQuantidadeKeyPressed
        // TODO add your handling code here:
         if(jFormattedTextFieldQuantidade.getText().equals("Única")){
            jFormattedTextFieldQuantidade.setText("");
        }
    }//GEN-LAST:event_jFormattedTextFieldQuantidadeKeyPressed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        // TODO add your handling code here:


        String perguntaQuantidade;

        perguntaQuantidade = JOptionPane.showInputDialog(null, "Qual a quantidade?", JOptionPane.PLAIN_MESSAGE);

        try {
            int estoque = 5000;
            int quantidade = new Integer(perguntaQuantidade);
            if (quantidade > 0 && quantidade < estoque) {
                //TESTAR VV
                tableModel.setQuantidade(jTable_Carrinho.getSelectedRow(), quantidade);
                
                
                //valorProduto = valorProduto * quantidadeProduto;
                jTextFieldValorAtual.setText(CalculaTotal());
                jTable_Carrinho.clearSelection();
                jTableProdutos.clearSelection();

                
            } else {
                JOptionPane.showMessageDialog(null, "estoque menor do que a mudança solicitada");
            }

        } catch (NumberFormatException  exception) {
            JOptionPane.showMessageDialog(null,"Apenas numeros são validos");
        }
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        limparTabela();        
        jTextFieldValorAtual.setText("0.0");
        
    }//GEN-LAST:event_jButtonLimparActionPerformed

    private void jButtonRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverActionPerformed
        if(jTable_Carrinho.getSelectedRow() != -1){
            int resposta = 0;
            resposta = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente remover o item da compra?");
            if(resposta ==JOptionPane.YES_OPTION){
                tableModel.removeRow(jTable_Carrinho.getSelectedRow());
                jTable_Carrinho.clearSelection();
                jTableProdutos.clearSelection();
                jTextFieldValorAtual.setText(CalculaTotal());            
            }
        }else{
            JOptionPane.showMessageDialog(null, "Escolha o item que deseja remover da compra");
        }
    }//GEN-LAST:event_jButtonRemoverActionPerformed

    private void jTextFieldSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSaldoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSaldoActionPerformed

    private void jTextFieldNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomeActionPerformed
        // TODO add your handling code here:
        jScrollPane1.setVisible(false);
        Enter = 1;        
    }//GEN-LAST:event_jTextFieldNomeActionPerformed

    private void jTextFieldNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomeKeyReleased
        // TODO add your handling code here:
        if(Enter == 0){
            ListaDePesquisas();
        }else{ 
            Enter = 0;
        }
    }//GEN-LAST:event_jTextFieldNomeKeyReleased

    private void jScrollPane1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MousePressed
        // TODO add your handling code here:
        MostraPesquisa();
        jScrollPane1.setVisible(false);        
    }//GEN-LAST:event_jScrollPane1MousePressed

    private void jListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListMouseClicked
        // TODO add your handling code here:
        
        
        
        String nomeLista =""+jList.getSelectedValue();
        conex.conectar();
        conex.executaSql("select *from clientes where nome='"+nomeLista+"'");
        try {

            conex.rs.first(); 
            jTextFieldSaldo.setText(conex.rs.getString("credito"));
            jLabelNomeCliente.setText(conex.rs.getString("nome"));
            jScrollPane1.setVisible(false);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao selecionar os dados "+ex);
        }
        
        conex.desconecta();
    }//GEN-LAST:event_jListMouseClicked

    private void jTextFieldNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){   
            jScrollPane1.setVisible(false);
     }    
    }//GEN-LAST:event_jTextFieldNomeKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        if(nomeProduto != null ){
            if(jTextFieldQuantidade.getText().equals("Única")||jTextFieldQuantidade.getText().equals("")){
                quantidadeProduto = 1;  
                preencherTabelaCarrinho();
            }else{
                quantidadeProduto = Integer.parseInt(jTextFieldQuantidade.getText());
                valorProduto = valorProduto * quantidadeProduto;
                preencherTabelaCarrinho();
            }
            jTextFieldValorAtual.setText(CalculaTotal());
            jTableProdutos.clearSelection();
            jTable_Carrinho.clearSelection();
            jTextFieldQuantidade.setText("Única");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jFormattedTextFieldQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextFieldQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextFieldQuantidadeActionPerformed

    private void jTextFieldQuantidadeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeMouseClicked
        // TODO add your handling code here:
        if(jTextFieldQuantidade.getText().equals("Ùnica")){
            jTextFieldQuantidade.setText("");
        }
    }//GEN-LAST:event_jTextFieldQuantidadeMouseClicked

    private void jTextFieldQuantidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeKeyPressed
        // TODO add your handling code here:
        if(jTextFieldQuantidade.getText().equals("Ùnica")){
            jTextFieldQuantidade.setText("");
        }
    }//GEN-LAST:event_jTextFieldQuantidadeKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JButton jButtonRemover;
    private javax.swing.JComboBox<String> jComboBoxTipodoProduto;
    private javax.swing.JFormattedTextField jFormattedTextFieldQuantidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelNomeCliente;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JList<String> jList;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableProdutos;
    private javax.swing.JTable jTable_Carrinho;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldPesquisarProduto;
    private javax.swing.JTextField jTextFieldQuantidade;
    private javax.swing.JTextField jTextFieldSaldo;
    private javax.swing.JTextField jTextFieldValorAtual;
    // End of variables declaration//GEN-END:variables
}

