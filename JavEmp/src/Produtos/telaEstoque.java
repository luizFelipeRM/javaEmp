/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Produtos;

import DB.ConnectMYSQL;
import Funcionarios.modeloTabela;
import static java.lang.Thread.sleep;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author luiz
 */
public class telaEstoque extends javax.swing.JInternalFrame{

    /**
     * Creates new form telaEstoque
     */
    ConnectMYSQL conex = new ConnectMYSQL();
    beansProdutos mod = new beansProdutos();
    daoProdutos dao = new daoProdutos();
    
    
           public void atualizarTabela() {
             while (true) {
                try {
                   if(jComboBoxTipoDoProduto.getSelectedItem() == "Todos"){
                        if(jTextFieldPesquisar.getText().equals("")){
                    preencherTabela("select *from produtos order by nome");
                    
                        }else{
                            mod.setPesquisa(jTextFieldPesquisar.getText());
                            dao.buscar(mod);
                            preencherTabela("select *from produtos where nome like'%" + mod.getPesquisa()+ "%'");
                      }                        
                }else{
                      mod.setPesquisa(jTextFieldPesquisar.getText());
                      mod.setTipoPesquisa((String) jComboBoxTipoDoProduto.getSelectedItem());
                      dao.buscar(mod);                      
                      preencherTabela("select *from produtos where nome like'%" + mod.getPesquisa()+ "%'"+"and tipo like'"+mod.getTipoPesquisa()+"'");
                      
        }
                    Thread.sleep(20000);
             } catch (InterruptedException ex) {
        Thread.currentThread().interrupt();
      }
    }
  }
    
    public telaEstoque(){
        initComponents();
        preencherTabela("select *from produtos order by nome");
        new Thread(new Runnable() {
            @Override
            public void run() {
            atualizarTabela();
            }
        }).start();   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEstoqueProdutos = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jTextFieldPesquisar = new javax.swing.JTextField();
        jComboBoxTipoDoProduto = new javax.swing.JComboBox<>();

        setBorder(null);
        setClosable(true);
        setTitle("Estoque");
        getContentPane().setLayout(null);

        jTableEstoqueProdutos.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTableEstoqueProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableEstoqueProdutos);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(12, 113, 1330, 560);

        jButton1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton1.setText("Adicionar Quantidade");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(10, 0, 1330, 80);

        jTextFieldPesquisar.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTextFieldPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPesquisarActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldPesquisar);
        jTextFieldPesquisar.setBounds(10, 80, 1020, 35);

        jComboBoxTipoDoProduto.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jComboBoxTipoDoProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Hidráulicos", "Ferragens e Ferramentas", "Tubos", "Fabricantes", "Tintas e Abrasivos", "Ferramentas Manuais", "Material Elétrico" }));
        jComboBoxTipoDoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxTipoDoProdutoActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxTipoDoProduto);
        jComboBoxTipoDoProduto.setBounds(1030, 80, 310, 31);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
       if(jTableEstoqueProdutos.getSelectedRow() != -1){  
        String perguntaQuantidade;
        perguntaQuantidade = JOptionPane.showInputDialog(null, "Qual a quantidade?", JOptionPane.PLAIN_MESSAGE);        
        int quantidade = new Integer(perguntaQuantidade);
        
        mod.setId((int) jTableEstoqueProdutos.getValueAt(jTableEstoqueProdutos.getSelectedRow(), 0));
        mod.setNome((String) jTableEstoqueProdutos.getValueAt(jTableEstoqueProdutos.getSelectedRow(), 1));
        mod.setTipo((String) jTableEstoqueProdutos.getValueAt(jTableEstoqueProdutos.getSelectedRow(), 2));
        mod.setMarca((String) jTableEstoqueProdutos.getValueAt(jTableEstoqueProdutos.getSelectedRow(), 3));        
        mod.setValor((Double) jTableEstoqueProdutos.getValueAt(jTableEstoqueProdutos.getSelectedRow(), 4));
        mod.setEstoque((int) jTableEstoqueProdutos.getValueAt(jTableEstoqueProdutos.getSelectedRow(), 5) + quantidade);

        dao.editar(mod);
           
            if(jComboBoxTipoDoProduto.getSelectedItem() == "Todos"){
                        if(jTextFieldPesquisar.getText().equals("")){
                    preencherTabela("select *from produtos order by nome");
                    
                        }else{
                            mod.setPesquisa(jTextFieldPesquisar.getText());
                            dao.buscar(mod);
                            preencherTabela("select *from produtos where nome like'%" + mod.getPesquisa()+ "%'");
                      }                        
                }else{
                      mod.setPesquisa(jTextFieldPesquisar.getText());
                      mod.setTipoPesquisa((String) jComboBoxTipoDoProduto.getSelectedItem());
                      dao.buscar(mod);                      
                      preencherTabela("select *from produtos where nome like'%" + mod.getPesquisa()+ "%'"+"and tipo like'"+mod.getTipoPesquisa()+"'");                    
        }
      }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextFieldPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarActionPerformed
        mod.setPesquisa(jTextFieldPesquisar.getText());
        mod.setTipoPesquisa((String) jComboBoxTipoDoProduto.getSelectedItem());
        dao.buscar(mod);
        if(jComboBoxTipoDoProduto.getSelectedItem() == "Todos"){
            preencherTabela("select *from produtos where nome like'%" + mod.getPesquisa()+ "%'");
        }else{
            preencherTabela("select *from produtos where nome like'%" + mod.getPesquisa()+ "%'"+"and tipo like'"+mod.getTipoPesquisa()+"'");
        }
        
    }//GEN-LAST:event_jTextFieldPesquisarActionPerformed

    private void jComboBoxTipoDoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxTipoDoProdutoActionPerformed
        mod.setPesquisa(jTextFieldPesquisar.getText());
        mod.setTipoPesquisa((String) jComboBoxTipoDoProduto.getSelectedItem());
        dao.buscar(mod);
        if(jComboBoxTipoDoProduto.getSelectedItem() == "Todos"){
            preencherTabela("select *from produtos where nome like'%" + mod.getPesquisa()+ "%'");
        }else{
            preencherTabela("select *from produtos where nome like'%" + mod.getPesquisa()+ "%'"+"and tipo like'"+mod.getTipoPesquisa()+"'");
        }
    }//GEN-LAST:event_jComboBoxTipoDoProdutoActionPerformed

    

    public void preencherTabela(String Sql){
          ArrayList dados = new ArrayList();
          String [] colunas = new String []{"ID","Nome","Tipo","Marca","Valor","Estoque"};
          conex.conectar();
          conex.executaSql(Sql);        
          try{
              conex.rs.first();
              do{
                  dados.add(new Object[]{conex.rs.getInt("id"),conex.rs.getString("nome"),conex.rs.getString("tipo"),conex.rs.getString("marca"),conex.rs.getDouble("valor"),conex.rs.getInt("estoque")});
              }while(conex.rs.next());
          }catch(SQLException ex){
              
              
          }
          modeloTabela modelo = new modeloTabela(dados, colunas);
          
          jTableEstoqueProdutos.setModel(modelo);
          jTableEstoqueProdutos.getColumnModel().getColumn(0).setPreferredWidth(70);
          jTableEstoqueProdutos.getColumnModel().getColumn(0).setResizable(false);
          jTableEstoqueProdutos.getColumnModel().getColumn(1).setPreferredWidth(253);
          jTableEstoqueProdutos.getColumnModel().getColumn(1).setResizable(false);
          jTableEstoqueProdutos.getColumnModel().getColumn(2).setPreferredWidth(252);
          jTableEstoqueProdutos.getColumnModel().getColumn(2).setResizable(false);
          jTableEstoqueProdutos.getColumnModel().getColumn(3).setPreferredWidth(252);
          jTableEstoqueProdutos.getColumnModel().getColumn(3).setResizable(false);
          jTableEstoqueProdutos.getColumnModel().getColumn(4).setPreferredWidth(252);
          jTableEstoqueProdutos.getColumnModel().getColumn(4).setResizable(false);
          jTableEstoqueProdutos.getColumnModel().getColumn(5).setPreferredWidth(252);
          jTableEstoqueProdutos.getColumnModel().getColumn(5).setResizable(false);          
          jTableEstoqueProdutos.getTableHeader().setReorderingAllowed(false);
          jTableEstoqueProdutos.setAutoResizeMode(jTableEstoqueProdutos.AUTO_RESIZE_OFF);
          jTableEstoqueProdutos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
          conex.desconecta();
      }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBoxTipoDoProduto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableEstoqueProdutos;
    private javax.swing.JTextField jTextFieldPesquisar;
    // End of variables declaration//GEN-END:variables
}
