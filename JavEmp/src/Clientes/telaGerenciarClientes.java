/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Clientes;

import DB.ConnectMYSQL;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.text.MaskFormatter;
/**
 *
 * @author luiz
 */
public class telaGerenciarClientes extends javax.swing.JInternalFrame {

    beansCliente mod = new beansCliente();
    daoCliente control = new daoCliente();
    ConnectMYSQL conex = new ConnectMYSQL();
    int flag =1;
    
    
    public void atualizarTabela() {
             while (true) {
                try {
                         mod.setPesquisa(jTextFieldPesquisar.getText());
                         control.buscar(mod);
                         if(jTextFieldPesquisar.getText().equals("")){
                             preencherTabela("select *from clientes order by nome");
                         }else{
                             mod.setPesquisa(jTextFieldPesquisar.getText());
                             control.buscar(mod);
                             preencherTabela("select *from clientes where nome like '%" + mod.getPesquisa()+ "%'");
                         }
                         
                         
                         
                    Thread.sleep(20000);
             } catch (InterruptedException ex) {
        Thread.currentThread().interrupt();
      }
    }
  }
    
    
    
    public telaGerenciarClientes() {
        initComponents();
        new Thread(new Runnable() {
            @Override
            public void run() {
            atualizarTabela();
            }
        }).start(); 
    }

    
    public void preencherTabela(String Sql){
      ArrayList dados = new ArrayList();
      String [] colunas = new String []{"ID","Nome","Rua","Bairro","Complemento","Cpf"};
      conex.conectar();
      conex.executaSql(Sql);        
      try{
          conex.rs.first();
          do{
              dados.add(new Object[]{conex.rs.getInt("id"),conex.rs.getString("nome"),conex.rs.getString("rua"),conex.rs.getString("bairro"),conex.rs.getString("complemento"),conex.rs.getString("cpfcnpj")});
          }while(conex.rs.next());
      }catch(SQLException ex){
          JOptionPane.showMessageDialog(null, "erro tabela clientes"+ex);
          
      }
      Clientes.modeloTabela modelo = new Clientes.modeloTabela(dados, colunas);

      jTableCliente.setModel(modelo);
      jTableCliente.getColumnModel().getColumn(0).setPreferredWidth(70);
      jTableCliente.getColumnModel().getColumn(0).setResizable(false);
      
      jTableCliente.getColumnModel().getColumn(1).setPreferredWidth(315);
      jTableCliente.getColumnModel().getColumn(1).setResizable(false);
      
      jTableCliente.getColumnModel().getColumn(2).setPreferredWidth(315);
      jTableCliente.getColumnModel().getColumn(2).setResizable(false);
      
      jTableCliente.getColumnModel().getColumn(3).setPreferredWidth(315);
      jTableCliente.getColumnModel().getColumn(3).setResizable(false);
      
      jTableCliente.getColumnModel().getColumn(4).setPreferredWidth(315);
      jTableCliente.getColumnModel().getColumn(4).setResizable(false);
      
      jTableCliente.getColumnModel().getColumn(5).setPreferredWidth(315);
      jTableCliente.getColumnModel().getColumn(5).setResizable(false);

      
      jTableCliente.getTableHeader().setReorderingAllowed(false);
      jTableCliente.setAutoResizeMode(jTableCliente.AUTO_RESIZE_OFF);
      jTableCliente.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
      conex.desconecta();
  }
    
    
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCliente = new javax.swing.JTable();
        jTextFieldPesquisar = new javax.swing.JTextField();
        jTextFieldId = new javax.swing.JTextField();
        jTextFieldNome = new javax.swing.JTextField();
        jButtonDeletar = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jFormattedTextFieldCPFCNPJ = new javax.swing.JFormattedTextField();
        jTextFieldRua = new javax.swing.JTextField();
        jComboBoxBairros = new javax.swing.JComboBox<>();
        jTextFieldComplemento = new javax.swing.JTextField();
        jButtonNovo = new javax.swing.JButton();
        jButtonEnviar = new javax.swing.JButton();

        setBorder(null);
        setClosable(true);
        setTitle("Gerenciar Clientes");
        getContentPane().setLayout(null);

        jTableCliente.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTableCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableCliente);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 160, 1340, 490);

        jTextFieldPesquisar.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTextFieldPesquisar.setToolTipText("Pesquisa");
        jTextFieldPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPesquisarActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldPesquisar);
        jTextFieldPesquisar.setBounds(10, 120, 1340, 40);

        jTextFieldId.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTextFieldId.setEnabled(false);
        getContentPane().add(jTextFieldId);
        jTextFieldId.setBounds(10, 10, 50, 40);

        jTextFieldNome.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTextFieldNome.setText("Nome do Cliente");
        jTextFieldNome.setToolTipText("Nome do Cliente");
        jTextFieldNome.setEnabled(false);
        jTextFieldNome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldNomeMouseClicked(evt);
            }
        });
        jTextFieldNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNomeKeyPressed(evt);
            }
        });
        getContentPane().add(jTextFieldNome);
        jTextFieldNome.setBounds(70, 10, 450, 40);

        jButtonDeletar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButtonDeletar.setText("Deletar");
        jButtonDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeletarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDeletar);
        jButtonDeletar.setBounds(1240, 0, 110, 100);

        jComboBox1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CPF", "CNPJ" }));
        jComboBox1.setEnabled(false);
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(530, 10, 140, 40);

        try {
            jFormattedTextFieldCPFCNPJ.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextFieldCPFCNPJ.setEnabled(false);
        jFormattedTextFieldCPFCNPJ.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        getContentPane().add(jFormattedTextFieldCPFCNPJ);
        jFormattedTextFieldCPFCNPJ.setBounds(680, 10, 300, 40);

        jTextFieldRua.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTextFieldRua.setText("Rua do Cliente");
        jTextFieldRua.setToolTipText("Rua do Cliente");
        jTextFieldRua.setEnabled(false);
        jTextFieldRua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldRuaMouseClicked(evt);
            }
        });
        jTextFieldRua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldRuaKeyPressed(evt);
            }
        });
        getContentPane().add(jTextFieldRua);
        jTextFieldRua.setBounds(10, 60, 400, 40);

        jComboBoxBairros.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jComboBoxBairros.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Abolição", "Acari", "Água Santa", "Alto da Boa Vista", "Anchieta", "Andaraí", "Anil", "Araújo Cosmos", "Baía Guanabara", "Bancários", "Bangu", "Barra da Tijuca", "Barra de Guaratiba", "Barra Guaratiba", "Barros Filho", "Benfica", "Bento Ribeiro", "Bonsucesso", "Botafogo", "Braz de Pina", "Braz Pina", "Cachambi", "Cacuia", "Caju", "Camorim", "Campinho", "Campo dos Afonsos", "Campo Grande", "Cascadura", "Catete", "Catumbi", "Cavalcanti", "Centro", "Cidade de Deus", "Cidade Deus", "Cidade Nova", "Cidade Universitária", "Cocota", "Coelho Neto", "Colégio", "Copacabana", "Cordovil", "Cosme Velho", "Cosmos", "Costa Barros", "Curicica", "Curral Falso", "Delegado Castilho", "Dendê", "Deodoro", "Dumas", "Encantado", "Engenheiro Leal", "Engenho da Rainha", "Engenho de Dentro", "Engenho Novo", "Estácio", "Flamengo", "Freguesia", "Freguesia - Ilha Governador", "Freguesia - Jacarepaguá", "Galeão", "Gamboa", "Gardênia Azul", "Gávea", "Glória", "Grajaú", "Guadalupe", "Guarabu", "Guaratiba", "Higienópolis", "Honório Gurgel", "Humaitá", "Inhaúma", "Inhoaíba", "Ipanema", "Irajá", "Itacolomi", "Itanhangá", "Jacaré", "Jacarepaguá", "Jardim América", "Jardim Botânico", "Jardim Carioca", "Jardim Guanabara", "Jardim Sulacap", "Joa", "Lagoa", "Laranjeiras", "Leblon", "Leme", "Lins de Vasconcelos", "Lins Vasconcelos", "Loteamento Madean", "Madureira", "Magalhães Bastos", "Mangueira", "Manguinhos", "Maracanã", "Mare", "Marechal Hermes", "Maria da Graça", "Meier", "Moneró", "Nossa Senhora das Graças", "Nossa Senhora Graças", "Olaria", "Oswaldo Cruz", "Paciência", "Padre Miguel", "Paquetá", "Parada de Lucas", "Parada Lucas", "Parque Anchieta", "Parque Boa Esperança", "Pavuna", "Pechincha", "Pedra de Guaratiba", "Pedra Guaratiba", "Penha", "Penha Circular", "Piedade", "Pilares", "Pitangueiras", "Portuguesa", "Praça Bandeira", "Praça Seca", "Praia Bandeira", "Quintino Bocaiuva", "Ramos", "Realengo", "Recreio Bandeirantes", "Recreio dos Bandeirantes", "Riachuelo", "Ribeira", "Ricardo de Albuquerque", "Rio Comprido", "Rocha", "Rocha Miranda", "Rocinha", "Sampaio", "Santa Cruz", "Santa Teresa", "Santa Tereza", "Santíssimo", "Santo Cristo", "São Conrado", "São Cristóvão", "São Francisco Xavier", "Saúde", "Senador Camará", "Senador Vasconcelos", "Sepetiba", "Tanque", "Taquara", "Tauá", "Tijuca", "Todos Os Santos", "Tomás Coelho", "Tubiacanga", "Turiaçu", "Urca", "Vargem Grande", "Vargem Pequena", "Vaz Lobo", "Vicente de Carvalho", "Vidigal", "Vigário Geral", "Vila da Penha", "Vila Isabel", "Vila Kosmos", "Vila Militar", "Vila Penha", "Vila Valqueire", "Vista Alegre", "Zumbi" }));
        jComboBoxBairros.setToolTipText("Bairro");
        jComboBoxBairros.setEnabled(false);
        getContentPane().add(jComboBoxBairros);
        jComboBoxBairros.setBounds(420, 60, 280, 40);

        jTextFieldComplemento.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jTextFieldComplemento.setText("Numero e Complemento");
        jTextFieldComplemento.setToolTipText("Numero e Complemento");
        jTextFieldComplemento.setEnabled(false);
        jTextFieldComplemento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldComplementoMouseClicked(evt);
            }
        });
        getContentPane().add(jTextFieldComplemento);
        jTextFieldComplemento.setBounds(710, 60, 270, 40);

        jButtonNovo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonNovo);
        jButtonNovo.setBounds(1000, 0, 110, 100);

        jButtonEnviar.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButtonEnviar.setText("Enviar");
        jButtonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnviarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEnviar);
        jButtonEnviar.setBounds(1120, 0, 110, 100);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClienteMouseClicked
        flag = 2;
        
        jTextFieldNome.setEnabled(true);
        jTextFieldId.setEnabled(true);
        jTextFieldRua.setEnabled(true);;
        jComboBox1.setEnabled(true);
        jFormattedTextFieldCPFCNPJ.setEnabled(true);
        jComboBoxBairros.setEnabled(true);
        jTextFieldComplemento.setEnabled(true);
        
        String nome =""+jTableCliente.getValueAt(jTableCliente.getSelectedRow(), 1);
        conex.conectar();
        conex.executaSql("select *from clientes where nome='"+nome+"'");
        try {
            conex.rs.first();
            jTextFieldId.setText(String.valueOf(conex.rs.getInt("id")));
            jTextFieldNome.setText(conex.rs.getString("nome"));
            jTextFieldRua.setText(conex.rs.getString("rua"));
            jComboBoxBairros.setSelectedItem(conex.rs.getString("bairro"));
            jTextFieldComplemento.setText(conex.rs.getString("complemento"));
            jFormattedTextFieldCPFCNPJ.setText(conex.rs.getString("cpfcnpj"));
            
             if(jFormattedTextFieldCPFCNPJ.getText().equals("   .   .   /    -  ") ){
            jComboBox1.setSelectedItem("CPF");
            jFormattedTextFieldCPFCNPJ.setText(conex.rs.getString("cpfcnpj"));
        }
             else if(jFormattedTextFieldCPFCNPJ.getText().equals("   .   .   -  ") ){
            jComboBox1.setSelectedItem("CNPJ");
            jFormattedTextFieldCPFCNPJ.setText(conex.rs.getString("cpfcnpj"));
        }
            

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao selecionar os dados "+ex);
        }
        
        if(jFormattedTextFieldCPFCNPJ.getText().equals("   .   .   /    -  ") ){
            jComboBox1.setSelectedItem("CNPJ");
        }
        if(jFormattedTextFieldCPFCNPJ.getText().equals("   .   .   -  ") && jComboBox1.getSelectedItem().equals("CPF")){
            jComboBox1.setSelectedItem("CPF");
        }
        
        conex.desconecta();
    }//GEN-LAST:event_jTableClienteMouseClicked

    private void jTextFieldPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPesquisarActionPerformed
        mod.setPesquisa(jTextFieldPesquisar.getText());
        control.buscar(mod);
        preencherTabela("select *from clientes where nome like '%" + mod.getPesquisa()+ "%'");
    }//GEN-LAST:event_jTextFieldPesquisarActionPerformed

    private void jButtonDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeletarActionPerformed
        // TODO add your handling code here:
        int resposta =0;
        resposta = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente excluir?");
        if(resposta ==JOptionPane.YES_OPTION){
            mod.setId(Integer.parseInt(jTextFieldId.getText()));
            control.excluir(mod);
            escrevereTrancar();
            preencherTabela("select *from clientes order by nome");
        }
    }//GEN-LAST:event_jButtonDeletarActionPerformed

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        flag =1;
        limpareLiberar();
        
        jTextFieldNome.setText("Nome do Cliente");
        jTextFieldId.setText("");
        jTextFieldRua.setText("Rua do Cliente");
        jComboBox1.setSelectedItem("CPF");
        jFormattedTextFieldCPFCNPJ.setText("");
        jComboBoxBairros.setSelectedItem("Abolição");
        jTextFieldComplemento.setText("Numeros e Complementos");
        
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEnviarActionPerformed
        // TODO add your handling code here:
            if(flag == 1){
            mod.setNome(jTextFieldNome.getText());
            mod.setCpfcnpj(jFormattedTextFieldCPFCNPJ.getText());
            mod.setRua(jTextFieldRua.getText());
            mod.setBairro((String) jComboBoxBairros.getSelectedItem());
            mod.setComplemento(jTextFieldComplemento.getText());
            control.Salvar(mod);
            preencherTabela("select *from clientes order by nome");
            escrevereTrancar();
        }else{
            mod.setNome(jTextFieldNome.getText());
            mod.setCpfcnpj(jFormattedTextFieldCPFCNPJ.getText());
            mod.setRua(jTextFieldRua.getText());
            mod.setBairro((String) jComboBoxBairros.getSelectedItem());
            mod.setComplemento(jTextFieldComplemento.getText());
            mod.setId(Integer.parseInt(jTextFieldId.getText()));
            control.editar(mod);
            preencherTabela("select *from clientes order by nome");
            escrevereTrancar();

        }
    }//GEN-LAST:event_jButtonEnviarActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        if(jComboBox1.getSelectedItem().equals("CPF")){
            MaskFormatter format;  
            try {
                jFormattedTextFieldCPFCNPJ.setFormatterFactory(null); 
                format = new MaskFormatter("###.###.###-##");
                jFormattedTextFieldCPFCNPJ.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(format));  
                jFormattedTextFieldCPFCNPJ.setValue(null);
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao formatar para CPF"+ex);
            }
        }else{
            MaskFormatter format;
             try {
                jFormattedTextFieldCPFCNPJ.setFormatterFactory(null); 
                format = new MaskFormatter("###.###.###/####-##");
                jFormattedTextFieldCPFCNPJ.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(format));  
                jFormattedTextFieldCPFCNPJ.setValue(null);
            } catch (ParseException ex) {
               JOptionPane.showMessageDialog(null, "Erro ao formatar para CNPJ"+ex);
            }
            
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jTextFieldNomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldNomeMouseClicked
        // TODO add your handling code here:
        if(jTextFieldNome.getText().equals("Nome do Cliente")){
            jTextFieldNome.setText("");
        }
    }//GEN-LAST:event_jTextFieldNomeMouseClicked

    private void jTextFieldNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomeKeyPressed
        // TODO add your handling code here:
                if(jTextFieldNome.getText().equals("Nome do Cliente")){
            jTextFieldNome.setText("");
        }
    }//GEN-LAST:event_jTextFieldNomeKeyPressed

    private void jTextFieldRuaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldRuaMouseClicked
        // TODO add your handling code here
                        if(jTextFieldNome.getText().equals("Rua do Cliente")){
            jTextFieldNome.setText("");
        }
    }//GEN-LAST:event_jTextFieldRuaMouseClicked

    private void jTextFieldRuaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldRuaKeyPressed
        // TODO add your handling code here:
                        if(jTextFieldNome.getText().equals("Rua do Cliente")){
            jTextFieldNome.setText("");
        }
    }//GEN-LAST:event_jTextFieldRuaKeyPressed

    private void jTextFieldComplementoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldComplementoMouseClicked
        // TODO add your handling code here:
             if(jTextFieldNome.getText().equals("Numero e Complemento")){
            jTextFieldNome.setText("");
        }
    }//GEN-LAST:event_jTextFieldComplementoMouseClicked
    public void limpareLiberar(){
        
        
        
        jTextFieldNome.setEnabled(true);
        jTextFieldRua.setEnabled(true);;
        jComboBox1.setEnabled(true);
        jFormattedTextFieldCPFCNPJ.setEnabled(true);
        jComboBoxBairros.setEnabled(true);
        jTextFieldComplemento.setEnabled(true);

    }
    public void escrevereTrancar(){
        
        jTextFieldNome.setText("Nome do Cliente");
        jTextFieldId.setText("");
        jTextFieldRua.setText("Rua do Cliente");
        jComboBox1.setSelectedItem("CPF");
        jFormattedTextFieldCPFCNPJ.setText("");
        jComboBoxBairros.setSelectedItem("Abolição");
        jTextFieldComplemento.setText("Numeros e Complementos");
        
        jTextFieldNome.setEnabled(false);
        jTextFieldRua.setEnabled(false);
        jComboBox1.setEnabled(false);
        jFormattedTextFieldCPFCNPJ.setEnabled(false);
        jComboBoxBairros.setEnabled(false);
        jTextFieldComplemento.setEnabled(false);
 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDeletar;
    private javax.swing.JButton jButtonEnviar;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBoxBairros;
    private javax.swing.JFormattedTextField jFormattedTextFieldCPFCNPJ;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCliente;
    private javax.swing.JTextField jTextFieldComplemento;
    private javax.swing.JTextField jTextFieldId;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldPesquisar;
    private javax.swing.JTextField jTextFieldRua;
    // End of variables declaration//GEN-END:variables
}
